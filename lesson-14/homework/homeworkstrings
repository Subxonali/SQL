CREATE DATABASE homework14

use homework14

CREATE TABLE Employee (
    Id INT,
    Name VARCHAR(50),
    Salary INT,
    ManagerId INT
);

INSERT INTO Employee (Id, Name, Salary, ManagerId) VALUES
(1, 'Joe', 70000, 3),
(2, 'Henry', 80000, 4),
(3, 'Sam', 60000, NULL),
(4, 'Max', 90000, NULL);

CREATE TABLE weather (
    Id INT,
    RecordDate DATE,
    Temperature INT
);

INSERT INTO weather (Id, RecordDate, Temperature) VALUES
(1, '2015-01-01', 10),
(2, '2015-01-02', 25),
(3, '2015-01-03', 20),
(4, '2015-01-04', 30);

CREATE TABLE Activity (
    player_id INT,
    device_id INT,
    event_date DATE,
    games_played INT
);

INSERT INTO Activity (player_id, device_id, event_date, games_played) VALUES
(1, 2, '2016-03-01', 5),
(1, 2, '2016-05-02', 6),
(2, 3, '2017-06-25', 1),
(3, 1, '2016-03-02', 0),
(3, 4, '2018-07-03', 5);

CREATE TABLE MultipleVals 
(
     Id INT
    ,[Vals] VARCHAR(100)
)

 
 
Insert Into MultipleVals values
 (1,'a,b,c')
,(2,'x,y,z')


CREATE TABLE fruits (
    fruit_list VARCHAR(100)
);

INSERT INTO fruits (fruit_list)
VALUES ('apple,banana,orange,grape');

CREATE TABLE RemoveLastComma
(
     Id INT
    ,Val VARCHAR(100)
)

 
INSERT INTO RemoveLastComma VALUES
(1,'Pawan'),
(2,'Pawan,Avtaar,'),
(3,','),
(4,'Hello,'),
(5,'a,a,b,c,'),
(6,NULL),
(7,'')

CREATE TABLE FindSameCharacters
(
     Id INT
    ,Vals VARCHAR(10)
)
 
INSERT INTO FindSameCharacters VALUES
(1,'aa'),
(2,'cccc'),
(3,'abc'),
(4,'aabc'),
(5,NULL),
(6,'a'),
(7,'zzz'),
(8,'abc')


CREATE TABLE Splitter
(
     Id INT
    ,Vals VARCHAR(100)
)
 
INSERT INTO Splitter VALUES
(1,'P.K'),
(2,'a.b'),
(3,'c.d'),
(4,'e.J'),
(5,'t.u.b')


CREATE TABLE testDots
(
     ID INT
    ,Vals VARCHAR(100)
)
 
INSERT INTO testDots VALUES
(1,'0.0'),
(2,'2.3.1.1'),
(3,'4.1.a.3.9'),
(4,'1.1.'),
(5,'a.b.b.b.b.b..b..b'),
(6,'6.')

CREATE TABLE GetIntegers
(
     Id INT
    ,VALS VARCHAR(100)
)
 
INSERT INTO GetIntegers VALUES
 (1,'P1')
,(2,'1 - Hero')
,(3,'2 - Ramesh')
,(4,'3 - KrishnaKANT')
,(5,'21 - Avtaar')
,(6,'5Laila')
,(7,'6  MMT')
,(8,'7#7#')
,(9,'#')
,(10,'8')
,(11,'98')
,(12,'111')
,(13,NULL)

CREATE TABLE RemoveDuplicateIntsFromNames
(
      PawanName INT
    , Pawan_slug_name VARCHAR(1000)
)
 
 
INSERT INTO RemoveDuplicateIntsFromNames VALUES
(1,  'PawanA-111'  ),
(2, 'PawanB-123'   ),
(3, 'PawanB-32'    ),
(4, 'PawanC-4444' ),
(5, 'PawanD-3'  )

CREATE TABLE TestPercent
(
    Strs VARCHAR(100)
)
 
INSERT INTO TestPercent
SELECT 'Pawan'
UNION ALL
SELECT 'Pawan%'
UNION ALL
SELECT 'Pawan%Kumar'
UNION ALL
SELECT '%'

CREATE TABLE [dbo].[TestMultipleColumns]
(
[Id] [int] NULL,
[Name] [varchar](20) NULL
)
 
INSERT INTO [TestMultipleColumns] VALUES
(1,    'Pawan,Kumar'),
(2,    'Sandeep,Goyal'),
(3,    'Isha,Mattoo'),
(4,    'Gopal,Ranjan'),
(5,    'Neeraj,Garg'),
(6,    'Deepak,Sharma'),
(7,    ' Mayank,Tripathi')
 

CREATE TABLE CountSpaces
(
texts VARCHAR(100)
)

 
INSERT INTO CountSpaces VALUES
('P Q R S '),
(' L M N O 0 0     '),
('I  am here only '),
(' Welcome to the new world '),
(' Hello world program'),
(' Are u nuts ')

create table p1 (id int, code int)
create table p2 (id int, code int)
insert into p1 select 1,0
insert into p1 select 2,1
insert into p2 select 1,5
insert into p2 select 2,5

CREATE TABLE WeekPercentagePuzzle
(
      Area INT
    , [Date] DATE
    , SalesLocal INT
    , SalesRemote INT
    , [DayName] VARCHAR(4)
    , [DayOfWeek] SMALLINT
    , FinancialWeek TINYINT
    , [MonthName] VARCHAR(15)
    , FinancialYear INT
)

 
INSERT INTO WeekPercentagePuzzle VALUES
(1,'2015-04-01',0,50,'Wed',4,1,'April',2015),
(2,'2015-04-01',null,null,'Wed',4,1,'April',2015),
(3,'2015-04-01',100,0,'Wed',4,1,'April',2015),
(3,'2015-04-01',50,100,'Wed',4,1,'April',2015),
(3,'2015-04-04',50,50,'Sat',7,1,'April',2015);


CREATE TABLE SeperateNumbersAndCharcters
(
    Value VARCHAR(100)
)

 
INSERT INTO SeperateNumbersAndCharcters
VALUES
('dskfsda1224'),
('123'),
('ABC'),
('23874283bsdjfhsjadkhfas09')


--Easy Tasks

--1. Write a SQL query to split the Name column by a comma into two separate columns: Name and Surname.(TestMultipleColumns)

select*from TestMultipleColumns

SELECT
  id,
  LEFT(Name, CHARINDEX(',', Name) - 1) AS Name,
  LTRIM(RIGHT(Name, LEN(Name) - CHARINDEX(',', Name))) AS Surname
FROM TestMultipleColumns;


-- 2. Write a SQL query to find strings from a table where the string itself contains the % character.(TestPercent)
select strs,number from
(select*, CHARINDEX('%',strs) as Number from TestPercent)  as fullen

 where Number>0


select strs from TestPercent
where CHARINDEX('%',strs)>0


--3.In this puzzle you will have to split a string based on dot(.).(Splitter)

select*from Splitter
SELECT
  id,
  PARSENAME(REPLACE(Vals, '.', '.'), 3) AS part1,
  PARSENAME(REPLACE(Vals, '.', '.'), 2) AS part2,
  PARSENAME(REPLACE(Vals, '.', '.'), 1) AS part3
FROM Splitter;


--4. Write a SQL query to replace all integers (digits) in the string with 'X'.(1234ABC123456XYZ1234567890ADS)

SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE('1234ABC123456XYZ1234567890ADS',
'0','X'),'1','X'),'2','X'),'3','X'),'4','X'),'5','X'),'6','X'),'7','X'),'8','X'),'9','X') AS result;


-- 5. Write a SQL query to return all rows where the value in the Vals column contains more than two dots (.).(testDots)

select*from testDots
SELECT *
FROM testDots
WHERE LEN(Vals) - LEN(REPLACE(Vals, '.', '')) > 2;


--- 6. Write a SQL query to count the occurrences of a substring within a string in a given column.(Not table)

select*from INFORMATION_SCHEMA.TABLES

SELECT (LEN('your_string') - LEN(REPLACE('your_string', 'substring', ''))) / LEN('substring') AS occurrence_count;

-- 7. Write a SQL query to count the spaces present in the string.(CountSpaces)

select*from CountSpaces 


select texts, (len(texts)-LEN(REPLACE(texts,' ',''))) AS COUNTS From CountSpaces

-- 8. write a SQL query that finds out employees who earn more than their managers.(Employee)

select e.id,e.Name,e.Salary,l.Salary as Manager_salary from Employee e
inner join
 Employee  l on e.id=l.ManagerId
 where e.salary>l.Salary

 --Medium Tasks

 --1. Write a SQL query to separate the integer values and the character values into two different columns.(SeperateNumbersAndCharcters)

 SELECT*FROM SeperateNumbersAndCharcters

SELECT 
    Value AS original_value,
    (
        SELECT SUBSTRING(Value, v.number, 1)
        FROM master..spt_values v
        WHERE v.type = 'P'
          AND v.number BETWEEN 1 AND LEN(Value)
          AND PATINDEX('%[0-9]%', SUBSTRING(Value, v.number, 1)) > 0
        FOR XML PATH('')
    ) AS numbers_only,
    (
        SELECT SUBSTRING(Value, v.number, 1)
        FROM master..spt_values v
        WHERE v.type = 'P'
          AND v.number BETWEEN 1 AND LEN(Value)
          AND PATINDEX('%[A-Za-z]%', SUBSTRING(Value, v.number, 1)) > 0
        FOR XML PATH('')
    ) AS letters_only
FROM SeperateNumbersAndCharcters;


--2. write a SQL query to find all dates' Ids with higher temperature compared to its previous (yesterday's) dates.(weather)
select*from weather
SELECT w1.Id, w1.RecordDate, w1.Temperature
FROM weather w1
JOIN weather w2 ON w1.RecordDate = DATEADD(DAY, 1, w2.RecordDate)
WHERE w1.Temperature > w2.Temperature;

-- 3.Write a SQL query that reports the device that is first logged in for each player.(Activity)

select*from Activity

SELECT a.player_id, a.device_id
FROM Activity a
WHERE EXISTS (
    SELECT 1
    FROM Activity b
    WHERE b.player_id = a.player_id
      AND b.event_date = (
          SELECT MIN(event_date)
          FROM Activity
          WHERE player_id = a.player_id
      )
);

-- 4. Write an SQL query that reports the first login date for each player.(Activity)


SELECT player_id, MIN(event_date) AS first_login_date
FROM Activity
GROUP BY player_id;

-- 5. Your task is to split the string into a list using a specific separator (such as a space, comma, etc.), and then return the third item from that list.(fruits)


-- 6. Write a SQL query to create a table where each character from the string will be converted into a row, with each row having a single column.(sdgfhsdgfhs@121313131)

DECLARE @input VARCHAR(100) = 'sdgfhsdgfhs@121313131';

WITH Numbers AS (
    SELECT TOP (LEN(@input))
        ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS n
    FROM sys.all_objects  -- bu yerda 1000+ qator mavjud bo'ladi
)
SELECT 
    SUBSTRING(@input, n, 1) AS char
FROM Numbers;


-- 7. You are given two tables: p1 and p2. Join these tables on the id column. The catch is: when the value of p1.code is 0, replace it with the value of p2.code.(p1,p2)

SELECT 
    p1.id,
    CASE 
        WHEN p1.code = 0 THEN p2.code
        ELSE p1.code
    END AS code
FROM p1
JOIN p2 ON p1.id = p2.id;

-- 8. You are given a sales table. Calculate the week-on-week percentage of sales per area for each financial week. For each week, the total sales will be considered 100%, and the percentage sales for each day of the week should be calculated based on the area sales for that week.(WeekPercentagePuzzle)

select*from WeekPercentagePuzzle

--Difficult Tasks

-- 1. In this puzzle you have to swap the first two letters of the comma separated string.(MultipleVals)

SELECT*FROM MultipleVals

